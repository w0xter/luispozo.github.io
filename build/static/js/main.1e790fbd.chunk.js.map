{"version":3,"sources":["components/Footer.js","components/Layout.js","api/solid.js","components/Recent.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["Text","Typography","Footer","props","justify","style","textAlign","type","href","Layout","xs","span","md","lg","xl","marginTop","children","uris","context","client","Client","queryEngine","QueryEngineComunicaSolid","sources","getInfo","Promise","resolve","reject","a","query","catch","err","response","data","Meta","Card","Recent","grid","gutter","dataSource","renderItem","project","actions","property","codeRepository","GithubOutlined","Object","keys","includes","push","url","Item","rdftype","className","heigth","minHeigth","cover","alt","image","src","title","name","description","about","Paragraph","Title","Home","state","then","setState","console","log","this","length","align","Person","size","direction","img","fontSize","LinkedinOutlined","TwitterOutlined","email","MailOutlined","level","currentProject","indicator","LoadingOutlined","React","Component","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1e790fbd.chunk.js","sourcesContent":["import React from 'react'\nimport { Row, Col, Typography} from 'antd'\nconst {Text} = Typography\nexport default function Footer(props){\n    return(\n        <Row justify=\"center\">\n            <Col style={{textAlign:'center'}}>\n                <Text  type=\"secondary\">This website looks very simple but it's powered by many technologies of the <a href=\"https://www.w3.org/standards/semanticweb/\">Semantic web.</a> You can learn more <a href=\"http://github.com/w0xter/website\">here.</a> </Text>\n            </Col>\n        </Row>\n    )\n}","import React from 'react'\nimport Footer from './Footer'\nimport {Row, Col} from 'antd'\nexport default function Layout(props){\n    return(\n    <Row justify=\"center\">\n        <Col\n          xs={{span:22}}\n          md={{ span: 15 }}\n          lg={{ span: 12 }}\n          xl={{ span: 12 }}\n        >\n          <div style={{marginTop:30}}>\n            {props.children}\n          </div>\n          <Footer></Footer>\n        </Col>\n    </Row>\n    )\n}","import {Client} from \"graphql-ld\";\nimport {QueryEngineComunicaSolid} from \"graphql-ld-comunica-solid\";\n \n// Define a JSON-LD context\nconst uris = {\n    foaf:\"http://xmlns.com/foaf/0.1/\",\n    schem:\"http://schema.org/\"\n}\nconst context = {\n    \"@context\": {\n      \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n      \"label\": \"rdfs:label\",\n      \"Person\":`${uris.schem}Person`,\n      \"foaf\": \"http://xmlns.com/foaf/0.1/\",\n      \"name\":`${uris.schem}name`,\n      \"description\":`${uris.schem}description`,\n      \"img\": `${uris.foaf}img`,\n      \"image\":`${uris.schem}image`,\n      \"about\":`${uris.schem}about`,\n      \"codeRepository\":`${uris.schem}codeRepository`,\n      \"url\":`${uris.schem}url`,\n      \"email\":`${uris.schem}email`,\n      \"rdftype\":\"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\",\n      \"currentProject\":`${uris.foaf}currentProject`,\n      \"interests\": \"foaf:topic_interest\",\n      \"LUIS\": { \"@id\": \"https://luispozo.inrupt.net/profile/card#me\" }\n    }\n  };\n \n// Create a GraphQL-LD client based on a client-side Comunica engine over 3 sources\nconst comunicaConfig = {\n  sources: [\n    \"https://luispozo.inrupt.net/profile/card#me\"\n  ],\n};\nconst client = new Client({ context, queryEngine: new QueryEngineComunicaSolid(comunicaConfig) });\n \n// Define a query\nconst query = `\n  query @single {\n    id(_:LUIS)\n    name @single\n    img @single\n    description @single\n    email @single\n    currentProject {\n        name @single\n        about @single\n        url @single @optional\n        image @single\n        codeRepository @single\n        rdftype @single\n    }\n    \n  }`;\n \n// Execute the query\nexport function getInfo(){\n    return new Promise(async (resolve, reject) => {\n        const response = await client.query({ query }).catch(err => reject(err));\n        resolve({data:response.data, context:context[\"@context\"]})\n    });\n}\n","import React from 'react'\nimport {Card,List} from 'antd'\nimport {GithubOutlined} from '@ant-design/icons'\n\nconst {Meta} = Card\n\nexport default function Recent(props){\n\n    return(\n        <List\n        grid={{ gutter: 16, xs:1, md: 3, lg:3 }}\n        dataSource={props.data}\n        renderItem={ (project) => {\n            const actions = [\n                <a property={props.context.codeRepository} href={project.codeRepository}>\n                <GithubOutlined/>\n                </a>\n            ]\n            if(Object.keys(project).includes('url'))\n                actions.push(\n                    <a property={props.context.url} href={project.url}>\n                    Try it\n                    </a>\n                )\n            return(\n                <List.Item>\n                <Card \n                    property={project.rdftype}\n                    className=\"shadowEffect\"\n                    style={{heigth:'100%',minHeigth:'100%'}}\n                    cover={\n                    <img\n                        alt=\"\"\n                        property={props.context.image}\n                        src={project.image}\n                    />\n                    }\n                    actions={actions}\n                >\n                    <Meta\n                    title={<span property={props.context.name}>{project.name}</span>}\n                    description={<span property={props.context.about}>{project.about}</span>}\n                    />\n                </Card>\n                </List.Item>  \n          )\n        }}\n     />\n    )\n} ","import React from 'react'\nimport Layout from '../components/Layout'\nimport {getInfo} from '../api/solid'\nimport {Row, Col,Typography, Space, Divider, Spin} from 'antd'\nimport { TwitterOutlined, GithubOutlined, LinkedinOutlined, MailOutlined, LoadingOutlined} from '@ant-design/icons'\nimport RecentProjects from '../components/Recent'\nconst {Paragraph} = Typography\nconst {Title} = Typography\n\nexport default class Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            data:{},\n            context:{}\n        }\n    }\n\n    componentDidMount(){\n        getInfo().then((response) => this.setState({data:response.data, context:response.context})).catch((err) => console.log(err))\n\n    }\n    componentDidUpdate(){\n        if(Object.keys(this.state.data).length === 0)\n            getInfo().then((response) => this.setState({data:response.data, context:response.context})).catch((err) => console.log(err))\n    }\n    render(){\n        console.log(this.state.data)\n    return(\n        <Layout>\n            {Object.keys(this.state.data).length !== 0?(\n            <>\n            <Row align=\"middle\" justify=\"center\" property={this.state.context.Person}>\n            <Col xs={24} md={8} align=\"center\">\n                <Space size=\"small\" direction=\"vertical\">\n                    <img className=\"imgHome\" property={this.state.context.img} src={this.state.data.img} alt=\"\"/>\n                    <Row gutter={[16, 16] } justify=\"center\">\n                        <Col>\n                        <a href=\"http://github.com/w0xter\">\n                            <GithubOutlined  style={{ fontSize: '1.5em'}} />\n                        </a>\n                        </Col>\n                        <Col>\n                        <a href=\"http://www.linkedin.com/in/luis-pozo-472b6317a\">\n                            <LinkedinOutlined  style={{ fontSize: '1.5em'}} />\n                        </a>\n                        </Col>\n                        <Col>\n                        <a href=\"http://twitter.com/luispozodev\">\n                            <TwitterOutlined  style={{ fontSize: '1.5em'}} />\n                        </a>\n                        </Col>\n                        <Col>\n                        <a href={\"mailto:\" + this.state.data.email} property={this.state.context.email}>\n                            <MailOutlined  style={{ fontSize: '1.5em'}} />\n                        </a>\n                        </Col>\n\n                    </Row>\n                </Space>\n            </Col>\n            <Col xs={24} md={12}>\n                <Title level={2}>\n                    <span property={this.state.context.name}>\n                        {this.state.data.name}\n                    </span></Title>\n                <span property={this.state.context.description}>\n                <Paragraph style={{textAlign:'justify'}}>\n                    {this.state.data.description}\n                </Paragraph>\n                </span>\n            </Col>\n        </Row>\n        <Divider></Divider>\n        <Row>\n            <Col>\n            <Title level={2}>Recent Projects:</Title>\n            </Col>\n        </Row>\n        <RecentProjects data={this.state.data.currentProject} context={this.state.context}></RecentProjects>\n        <Divider></Divider>  \n        </>\n            ):(\n                <div className=\"fullScreen\">\n                <Row justify=\"center\">\n                    <Col>\n                        <Spin indicator={<LoadingOutlined style={{fontSize:'6em'}}/>}/>                    \n                    </Col>\n                </Row>\n                </div>\n            )}\n       \n        </Layout>\n \n    )\n}\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from './pages/Home'\nimport './App.css';\nimport 'antd/dist/antd.css';\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}